C **********************************************************************
C J2 Mises Plasticity with ANN 3-15-7-1
C **********************************************************************
      subroutine vuhard (
C Read only -
     1     nblock, 
     2     nElement, nIntPt, nLayer, nSecPt, 
     3     lAnneal, stepTime, totalTime, dt, cmname,
     4     nstatev, nfieldv, nprops, 
     5     props, tempOld, tempNew, fieldOld, fieldNew,
     6     stateOld,
     7     eqps, eqpsRate,
C Write only -
     8     yield, dyieldDtemp, dyieldDeqps,
     9     stateNew )
C
      include 'vaba_param.inc'
C
      dimension nElement(nblock),
     1     props(nprops), 
     2     tempOld(nblock),
     3     fieldOld(nblock,nfieldv), 
     4     stateOld(nblock,nstatev), 
     5     tempNew(nblock),
     6     fieldNew(nblock,nfieldv),
     7     eqps(nblock),
     8     eqpsRate(nblock),
     9     yield(nblock),
     1     dyieldDtemp(nblock), 
     2     dyieldDeqps(nblock,2),
     3     stateNew(nblock,nstatev)
C
      character*80 cmname
C
C **********************************************************************  
C Start of the subroutine grab the parameters of the constitutive law
C **********************************************************************  
      parA      = props(1)
      parB      = props(2)
      parn      = props(3)
      parC      = props(4)
      parm      = props(5)
      pardepsp0 = props(6)
      parT0     = props(7)
      parTm     = props(8)
C
C **********************************************************************  
C Main computation block
C **********************************************************************  
      do k = 1, nblock
        epsp = eqps(k)
        depsp = eqpsRate(k)
        temp = tempNew(k)
C **********************************************************************  
C Yield Stress
C **********************************************************************
C xepsp = (epsp - minEntries[0]) / rangeEntries[0]
      xepsp = (epsp  - 0.0)/1.0
C xdepsp = (log(depsp/logBase) - minEntries[1]) / rangeEntries[1]
      xdepsp = (log(depsp/1.0)  - 0.0)/10.819778284410
C xtemp = (temp - minEntries[2]) / rangeEntries[2]
      xtemp = (temp  - 20.0)/480.0
C l1 = w1.dot(inputData) + b1
      xa0 =-0.171193018556*xepsp - 0.498235881329*xdepsp +
     +  1.572309255600*xtemp - 0.549710810184
      xa1 =-0.182183891535*xepsp - 0.279642552137*xdepsp +
     +  1.381547451019*xtemp - 1.007667899132
      xa2 =-0.121008850634*xepsp - 0.093622177839*xdepsp -
     +  1.284856081009*xtemp + 1.146428942680
      xa3 = 0.677952528000*xepsp + 0.785129725933*xdepsp -
     +  3.600407361984*xtemp - 1.056580066681
      xa4 =-8.224933624268*xepsp + 0.102857425809*xdepsp -
     +  1.170001864433*xtemp - 0.834357798100
      xa5 =-0.262212038040*xepsp - 0.370604902506*xdepsp +
     +  1.530593752861*xtemp - 0.557993113995
      xa6 = 0.363313168287*xepsp + 0.307944297791*xdepsp -
     +  1.739808201790*xtemp - 0.515264987946
      xa7 =-0.171282619238*xepsp - 0.936020970345*xdepsp -
     +  0.700896143913*xtemp - 0.525115251541
      xa8 =-2.934058904648*xepsp + 0.024969343096*xdepsp -
     +  0.818501532078*xtemp + 0.164255663753
      xa9 =-0.298778355122*xepsp - 0.517931699753*xdepsp -
     +  7.580852508545*xtemp - 1.864312648773
      xa10 = 1.177027940750*xepsp - 0.308994054794*xdepsp -
     +  1.684179663658*xtemp - 0.859441757202
      xa11 =-0.231339216232*xepsp - 0.290423154831*xdepsp +
     +  1.502451419830*xtemp - 1.198348641396
      xa12 = 235.784103393555*xepsp - 0.099293000996*xdepsp +
     +  0.760096788406*xtemp + 0.819592595100
      xa13 =-23.344444274902*xepsp + 0.164729803801*xdepsp -
     +  0.949119210243*xtemp - 0.500462353230
      xa14 = 0.329279005527*xepsp + 0.054267201573*xdepsp -
     +  1.555212616920*xtemp - 0.580829739571
C f1 = 1/(1 + np.exp(-l1))
      xb0 = 1.0/(1.0 + exp(-xa0))
      xb1 = 1.0/(1.0 + exp(-xa1))
      xb2 = 1.0/(1.0 + exp(-xa2))
      xb3 = 1.0/(1.0 + exp(-xa3))
      xb4 = 1.0/(1.0 + exp(-xa4))
      xb5 = 1.0/(1.0 + exp(-xa5))
      xb6 = 1.0/(1.0 + exp(-xa6))
      xb7 = 1.0/(1.0 + exp(-xa7))
      xb8 = 1.0/(1.0 + exp(-xa8))
      xb9 = 1.0/(1.0 + exp(-xa9))
      xb10 = 1.0/(1.0 + exp(-xa10))
      xb11 = 1.0/(1.0 + exp(-xa11))
      xb12 = 1.0/(1.0 + exp(-xa12))
      xb13 = 1.0/(1.0 + exp(-xa13))
      xb14 = 1.0/(1.0 + exp(-xa14))
C l2 = w2.dot(f1) + b2
      xc0 = 0.000755758665*xb0 +
     +  0.348879784346*xb1 -
     +  1.622294902802*xb2 -
     +  1.744126558304*xb3 +
     +  1.189603447914*xb4 +
     +  0.773437738419*xb5 -
     +  1.077992796898*xb6 +
     +  0.195966541767*xb7 +
     +  0.371459305286*xb8 -
     +  2.175866603851*xb9 +
     +  0.267415910959*xb10 +
     +  0.117423757911*xb11 -
     +  1.837396621704*xb12 -
     +  1.631284832954*xb13 -
     +  0.915312469006*xb14 -
     +  0.220450609922
      xc1 =-1.520736217499*xb0 -
     +  0.598750412464*xb1 -
     +  0.567928969860*xb2 +
     +  0.733987450600*xb3 -
     +  1.956816315651*xb4 -
     +  0.990542054176*xb5 -
     +  0.024108286947*xb6 -
     +  0.921862065792*xb7 -
     +  1.585801959038*xb8 -
     +  0.359389543533*xb9 -
     +  0.568457961082*xb10 -
     +  0.462055325508*xb11 +
     +  0.937371969223*xb12 +
     +  0.713293492794*xb13 -
     +  0.270313948393*xb14 -
     +  0.580874204636
      xc2 =-0.263961493969*xb0 +
     +  0.340663641691*xb1 -
     +  1.086898207664*xb2 -
     +  0.190290063620*xb3 +
     +  1.526942133904*xb4 +
     +  0.134074971080*xb5 -
     +  0.458628684282*xb6 -
     +  0.210141628981*xb7 +
     +  0.690639853477*xb8 -
     +  0.559289455414*xb9 -
     +  0.561830639839*xb10 +
     +  0.010643188842*xb11 -
     +  2.779141187668*xb12 +
     +  2.203900575638*xb13 -
     +  0.874182760715*xb14 -
     +  0.327307760715
      xc3 =-1.667145609856*xb0 -
     +  1.261272549629*xb1 -
     +  1.568691968918*xb2 -
     +  1.300865530968*xb3 -
     +  0.965722560883*xb4 -
     +  1.076323390007*xb5 -
     +  0.399949252605*xb6 -
     +  2.976247072220*xb7 -
     +  3.980113983154*xb8 -
     +  1.212576389313*xb9 -
     +  0.478132873774*xb10 -
     +  1.447541594505*xb11 -
     +  0.287288188934*xb12 -
     +  0.847129225731*xb13 -
     +  0.899507462978*xb14 -
     +  0.965191483498
      xc4 =-0.421280384064*xb0 -
     +  0.564329922199*xb1 +
     +  1.009604096413*xb2 +
     +  0.335408806801*xb3 -
     +  0.515781700611*xb4 -
     +  0.189889833331*xb5 +
     +  0.561685442924*xb6 -
     +  0.274590790272*xb7 -
     +  0.640589475632*xb8 -
     +  0.454831272364*xb9 +
     +  0.185221791267*xb10 -
     +  1.204036474228*xb11 +
     +  2.715961456299*xb12 -
     +  2.415366411209*xb13 +
     +  0.508277475834*xb14 +
     +  0.001537762932
      xc5 =-1.879916071892*xb0 -
     +  1.522165775299*xb1 -
     +  0.468759000301*xb2 +
     +  1.417994260788*xb3 +
     +  0.370010912418*xb4 -
     +  2.718472957611*xb5 +
     +  0.469961762428*xb6 -
     +  2.314279079437*xb7 -
     +  0.682480514050*xb8 -
     +  1.616387128830*xb9 +
     +  0.202725619078*xb10 -
     +  1.451031565666*xb11 +
     +  0.099444560707*xb12 -
     +  1.293660640717*xb13 +
     +  0.203722134233*xb14 -
     +  0.991643249989
      xc6 =-0.589749693871*xb0 -
     +  0.571380496025*xb1 +
     +  0.120540380478*xb2 +
     +  0.763658463955*xb3 -
     +  1.608781814575*xb4 -
     +  0.913990020752*xb5 +
     +  0.719076871872*xb6 -
     +  1.206779360771*xb7 -
     +  0.747950553894*xb8 -
     +  0.689776837826*xb9 -
     +  0.001232341980*xb10 -
     +  0.592846393585*xb11 +
     +  1.381900072098*xb12 +
     +  0.327141195536*xb13 +
     +  0.125081762671*xb14 -
     +  0.179510131478
C f2 = 1/(1 + np.exp(-l2))
      xd0 = 1.0/(1.0 + exp(-xc0))
      xd1 = 1.0/(1.0 + exp(-xc1))
      xd2 = 1.0/(1.0 + exp(-xc2))
      xd3 = 1.0/(1.0 + exp(-xc3))
      xd4 = 1.0/(1.0 + exp(-xc4))
      xd5 = 1.0/(1.0 + exp(-xc5))
      xd6 = 1.0/(1.0 + exp(-xc6))
C xsig = w3.dot(f2) + b3
      xsig =-1.147175073624*xd0 +
     +  0.396453082561*xd1 -
     +  1.731730222702*xd2 +
     +  0.341490298510*xd3 +
     +  0.917140424252*xd4 +
     +  0.416720062494*xd5 +
     +  0.469032645226*xd6 -
     +  0.399738907814
C yieldStress = xsig * rangeEntries[3] + minEntries[3]
      Yield(k) = 977.555715042962*xsig + 579.184642915415
C **********************************************************************  
C Derivatives of Yield Stress
C **********************************************************************
      xa0 = exp(-(-0.171193018556*xepsp -
     +  0.498235881329*xdepsp + 1.572309255600*xtemp -
     +  0.549710810184))
      xa1 = exp(-(-0.182183891535*xepsp -
     +  0.279642552137*xdepsp + 1.381547451019*xtemp -
     +  1.007667899132))
      xa2 = exp(-(-0.121008850634*xepsp -
     +  0.093622177839*xdepsp - 1.284856081009*xtemp +
     +  1.146428942680))
      xa3 = exp(-(0.677952528000*xepsp +
     +  0.785129725933*xdepsp - 3.600407361984*xtemp -
     +  1.056580066681))
      xa4 = exp(-(-8.224933624268*xepsp +
     +  0.102857425809*xdepsp - 1.170001864433*xtemp -
     +  0.834357798100))
      xa5 = exp(-(-0.262212038040*xepsp -
     +  0.370604902506*xdepsp + 1.530593752861*xtemp -
     +  0.557993113995))
      xa6 = exp(-(0.363313168287*xepsp +
     +  0.307944297791*xdepsp - 1.739808201790*xtemp -
     +  0.515264987946))
      xa7 = exp(-(-0.171282619238*xepsp -
     +  0.936020970345*xdepsp - 0.700896143913*xtemp -
     +  0.525115251541))
      xa8 = exp(-(-2.934058904648*xepsp +
     +  0.024969343096*xdepsp - 0.818501532078*xtemp +
     +  0.164255663753))
      xa9 = exp(-(-0.298778355122*xepsp -
     +  0.517931699753*xdepsp - 7.580852508545*xtemp -
     +  1.864312648773))
      xa10 = exp(-(1.177027940750*xepsp -
     +  0.308994054794*xdepsp - 1.684179663658*xtemp -
     +  0.859441757202))
      xa11 = exp(-(-0.231339216232*xepsp -
     +  0.290423154831*xdepsp + 1.502451419830*xtemp -
     +  1.198348641396))
      xa12 = exp(-(235.784103393555*xepsp -
     +  0.099293000996*xdepsp + 0.760096788406*xtemp +
     +  0.819592595100))
      xa13 = exp(-(-23.344444274902*xepsp +
     +  0.164729803801*xdepsp - 0.949119210243*xtemp -
     +  0.500462353230))
      xa14 = exp(-(0.329279005527*xepsp +
     +  0.054267201573*xdepsp - 1.555212616920*xtemp -
     +  0.580829739571))
C xb = np.exp(w2.dot(1/(1 + xa)) + b2)
      xb0 = exp(0.000755758665*(1/(1 + xa0)) +
     +  0.348879784346*(1/(1 + xa1)) -
     +  1.622294902802*(1/(1 + xa2)) -
     +  1.744126558304*(1/(1 + xa3)) +
     +  1.189603447914*(1/(1 + xa4)) +
     +  0.773437738419*(1/(1 + xa5)) -
     +  1.077992796898*(1/(1 + xa6)) +
     +  0.195966541767*(1/(1 + xa7)) +
     +  0.371459305286*(1/(1 + xa8)) -
     +  2.175866603851*(1/(1 + xa9)) +
     +  0.267415910959*(1/(1 + xa10)) +
     +  0.117423757911*(1/(1 + xa11)) -
     +  1.837396621704*(1/(1 + xa12)) -
     +  1.631284832954*(1/(1 + xa13)) -
     +  0.915312469006*(1/(1 + xa14)) -
     +  0.220450609922)
      xb1 = exp(-1.520736217499*(1/(1 + xa0)) -
     +  0.598750412464*(1/(1 + xa1)) -
     +  0.567928969860*(1/(1 + xa2)) +
     +  0.733987450600*(1/(1 + xa3)) -
     +  1.956816315651*(1/(1 + xa4)) -
     +  0.990542054176*(1/(1 + xa5)) -
     +  0.024108286947*(1/(1 + xa6)) -
     +  0.921862065792*(1/(1 + xa7)) -
     +  1.585801959038*(1/(1 + xa8)) -
     +  0.359389543533*(1/(1 + xa9)) -
     +  0.568457961082*(1/(1 + xa10)) -
     +  0.462055325508*(1/(1 + xa11)) +
     +  0.937371969223*(1/(1 + xa12)) +
     +  0.713293492794*(1/(1 + xa13)) -
     +  0.270313948393*(1/(1 + xa14)) -
     +  0.580874204636)
      xb2 = exp(-0.263961493969*(1/(1 + xa0)) +
     +  0.340663641691*(1/(1 + xa1)) -
     +  1.086898207664*(1/(1 + xa2)) -
     +  0.190290063620*(1/(1 + xa3)) +
     +  1.526942133904*(1/(1 + xa4)) +
     +  0.134074971080*(1/(1 + xa5)) -
     +  0.458628684282*(1/(1 + xa6)) -
     +  0.210141628981*(1/(1 + xa7)) +
     +  0.690639853477*(1/(1 + xa8)) -
     +  0.559289455414*(1/(1 + xa9)) -
     +  0.561830639839*(1/(1 + xa10)) +
     +  0.010643188842*(1/(1 + xa11)) -
     +  2.779141187668*(1/(1 + xa12)) +
     +  2.203900575638*(1/(1 + xa13)) -
     +  0.874182760715*(1/(1 + xa14)) -
     +  0.327307760715)
      xb3 = exp(-1.667145609856*(1/(1 + xa0)) -
     +  1.261272549629*(1/(1 + xa1)) -
     +  1.568691968918*(1/(1 + xa2)) -
     +  1.300865530968*(1/(1 + xa3)) -
     +  0.965722560883*(1/(1 + xa4)) -
     +  1.076323390007*(1/(1 + xa5)) -
     +  0.399949252605*(1/(1 + xa6)) -
     +  2.976247072220*(1/(1 + xa7)) -
     +  3.980113983154*(1/(1 + xa8)) -
     +  1.212576389313*(1/(1 + xa9)) -
     +  0.478132873774*(1/(1 + xa10)) -
     +  1.447541594505*(1/(1 + xa11)) -
     +  0.287288188934*(1/(1 + xa12)) -
     +  0.847129225731*(1/(1 + xa13)) -
     +  0.899507462978*(1/(1 + xa14)) -
     +  0.965191483498)
      xb4 = exp(-0.421280384064*(1/(1 + xa0)) -
     +  0.564329922199*(1/(1 + xa1)) +
     +  1.009604096413*(1/(1 + xa2)) +
     +  0.335408806801*(1/(1 + xa3)) -
     +  0.515781700611*(1/(1 + xa4)) -
     +  0.189889833331*(1/(1 + xa5)) +
     +  0.561685442924*(1/(1 + xa6)) -
     +  0.274590790272*(1/(1 + xa7)) -
     +  0.640589475632*(1/(1 + xa8)) -
     +  0.454831272364*(1/(1 + xa9)) +
     +  0.185221791267*(1/(1 + xa10)) -
     +  1.204036474228*(1/(1 + xa11)) +
     +  2.715961456299*(1/(1 + xa12)) -
     +  2.415366411209*(1/(1 + xa13)) +
     +  0.508277475834*(1/(1 + xa14)) +
     +  0.001537762932)
      xb5 = exp(-1.879916071892*(1/(1 + xa0)) -
     +  1.522165775299*(1/(1 + xa1)) -
     +  0.468759000301*(1/(1 + xa2)) +
     +  1.417994260788*(1/(1 + xa3)) +
     +  0.370010912418*(1/(1 + xa4)) -
     +  2.718472957611*(1/(1 + xa5)) +
     +  0.469961762428*(1/(1 + xa6)) -
     +  2.314279079437*(1/(1 + xa7)) -
     +  0.682480514050*(1/(1 + xa8)) -
     +  1.616387128830*(1/(1 + xa9)) +
     +  0.202725619078*(1/(1 + xa10)) -
     +  1.451031565666*(1/(1 + xa11)) +
     +  0.099444560707*(1/(1 + xa12)) -
     +  1.293660640717*(1/(1 + xa13)) +
     +  0.203722134233*(1/(1 + xa14)) -
     +  0.991643249989)
      xb6 = exp(-0.589749693871*(1/(1 + xa0)) -
     +  0.571380496025*(1/(1 + xa1)) +
     +  0.120540380478*(1/(1 + xa2)) +
     +  0.763658463955*(1/(1 + xa3)) -
     +  1.608781814575*(1/(1 + xa4)) -
     +  0.913990020752*(1/(1 + xa5)) +
     +  0.719076871872*(1/(1 + xa6)) -
     +  1.206779360771*(1/(1 + xa7)) -
     +  0.747950553894*(1/(1 + xa8)) -
     +  0.689776837826*(1/(1 + xa9)) -
     +  0.001232341980*(1/(1 + xa10)) -
     +  0.592846393585*(1/(1 + xa11)) +
     +  1.381900072098*(1/(1 + xa12)) +
     +  0.327141195536*(1/(1 + xa13)) +
     +  0.125081762671*(1/(1 + xa14)) -
     +  0.179510131478)
C xc = w3v*(xb / (1 + xb)**2)
      xc0 =-1.147175073624*(xb0/(1 + xb0)**2)
      xc1 = 0.396453082561*(xb1/(1 + xb1)**2)
      xc2 =-1.731730222702*(xb2/(1 + xb2)**2)
      xc3 = 0.341490298510*(xb3/(1 + xb3)**2)
      xc4 = 0.917140424252*(xb4/(1 + xb4)**2)
      xc5 = 0.416720062494*(xb5/(1 + xb5)**2)
      xc6 = 0.469032645226*(xb6/(1 + xb6)**2)
C xd = xa / (1 + xa)**2
      xd0 = xa0/(1 + xa0)**2
      xd1 = xa1/(1 + xa1)**2
      xd2 = xa2/(1 + xa2)**2
      xd3 = xa3/(1 + xa3)**2
      xd4 = xa4/(1 + xa4)**2
      xd5 = xa5/(1 + xa5)**2
      xd6 = xa6/(1 + xa6)**2
      xd7 = xa7/(1 + xa7)**2
      xd8 = xa8/(1 + xa8)**2
      xd9 = xa9/(1 + xa9)**2
      xd10 = xa10/(1 + xa10)**2
      xd11 = xa11/(1 + xa11)**2
      xd12 = xa12/(1 + xa12)**2
      xd13 = xa13/(1 + xa13)**2
      xd14 = xa14/(1 + xa14)**2
C xe = (w2.T).dot(xc) * xd
      xe0 = (0.000755758665*xc0 -
     +  1.520736217499*xc1 -
     +  0.263961493969*xc2 -
     +  1.667145609856*xc3 -
     +  0.421280384064*xc4 -
     +  1.879916071892*xc5 -
     +  0.589749693871*xc6)*xd0
      xe1 = (0.348879784346*xc0 -
     +  0.598750412464*xc1 +
     +  0.340663641691*xc2 -
     +  1.261272549629*xc3 -
     +  0.564329922199*xc4 -
     +  1.522165775299*xc5 -
     +  0.571380496025*xc6)*xd1
      xe2 = (-1.622294902802*xc0 -
     +  0.567928969860*xc1 -
     +  1.086898207664*xc2 -
     +  1.568691968918*xc3 +
     +  1.009604096413*xc4 -
     +  0.468759000301*xc5 +
     +  0.120540380478*xc6)*xd2
      xe3 = (-1.744126558304*xc0 +
     +  0.733987450600*xc1 -
     +  0.190290063620*xc2 -
     +  1.300865530968*xc3 +
     +  0.335408806801*xc4 +
     +  1.417994260788*xc5 +
     +  0.763658463955*xc6)*xd3
      xe4 = (1.189603447914*xc0 -
     +  1.956816315651*xc1 +
     +  1.526942133904*xc2 -
     +  0.965722560883*xc3 -
     +  0.515781700611*xc4 +
     +  0.370010912418*xc5 -
     +  1.608781814575*xc6)*xd4
      xe5 = (0.773437738419*xc0 -
     +  0.990542054176*xc1 +
     +  0.134074971080*xc2 -
     +  1.076323390007*xc3 -
     +  0.189889833331*xc4 -
     +  2.718472957611*xc5 -
     +  0.913990020752*xc6)*xd5
      xe6 = (-1.077992796898*xc0 -
     +  0.024108286947*xc1 -
     +  0.458628684282*xc2 -
     +  0.399949252605*xc3 +
     +  0.561685442924*xc4 +
     +  0.469961762428*xc5 +
     +  0.719076871872*xc6)*xd6
      xe7 = (0.195966541767*xc0 -
     +  0.921862065792*xc1 -
     +  0.210141628981*xc2 -
     +  2.976247072220*xc3 -
     +  0.274590790272*xc4 -
     +  2.314279079437*xc5 -
     +  1.206779360771*xc6)*xd7
      xe8 = (0.371459305286*xc0 -
     +  1.585801959038*xc1 +
     +  0.690639853477*xc2 -
     +  3.980113983154*xc3 -
     +  0.640589475632*xc4 -
     +  0.682480514050*xc5 -
     +  0.747950553894*xc6)*xd8
      xe9 = (-2.175866603851*xc0 -
     +  0.359389543533*xc1 -
     +  0.559289455414*xc2 -
     +  1.212576389313*xc3 -
     +  0.454831272364*xc4 -
     +  1.616387128830*xc5 -
     +  0.689776837826*xc6)*xd9
      xe10 = (0.267415910959*xc0 -
     +  0.568457961082*xc1 -
     +  0.561830639839*xc2 -
     +  0.478132873774*xc3 +
     +  0.185221791267*xc4 +
     +  0.202725619078*xc5 -
     +  0.001232341980*xc6)*xd10
      xe11 = (0.117423757911*xc0 -
     +  0.462055325508*xc1 +
     +  0.010643188842*xc2 -
     +  1.447541594505*xc3 -
     +  1.204036474228*xc4 -
     +  1.451031565666*xc5 -
     +  0.592846393585*xc6)*xd11
      xe12 = (-1.837396621704*xc0 +
     +  0.937371969223*xc1 -
     +  2.779141187668*xc2 -
     +  0.287288188934*xc3 +
     +  2.715961456299*xc4 +
     +  0.099444560707*xc5 +
     +  1.381900072098*xc6)*xd12
      xe13 = (-1.631284832954*xc0 +
     +  0.713293492794*xc1 +
     +  2.203900575638*xc2 -
     +  0.847129225731*xc3 -
     +  2.415366411209*xc4 -
     +  1.293660640717*xc5 +
     +  0.327141195536*xc6)*xd13
      xe14 = (-0.915312469006*xc0 -
     +  0.270313948393*xc1 -
     +  0.874182760715*xc2 -
     +  0.899507462978*xc3 +
     +  0.508277475834*xc4 +
     +  0.203722134233*xc5 +
     +  0.125081762671*xc6)*xd14
C xf = (w1.T).dot(xe)
      xf0 =-0.171193018556*xe0 -
     +  0.182183891535*xe1 -
     +  0.121008850634*xe2 +
     +  0.677952528000*xe3 -
     +  8.224933624268*xe4 -
     +  0.262212038040*xe5 +
     +  0.363313168287*xe6 -
     +  0.171282619238*xe7 -
     +  2.934058904648*xe8 -
     +  0.298778355122*xe9 +
     +  1.177027940750*xe10 -
     +  0.231339216232*xe11 +
     +  235.784103393555*xe12 -
     +  23.344444274902*xe13 +
     +  0.329279005527*xe14
      xf1 =-0.498235881329*xe0 -
     +  0.279642552137*xe1 -
     +  0.093622177839*xe2 +
     +  0.785129725933*xe3 +
     +  0.102857425809*xe4 -
     +  0.370604902506*xe5 +
     +  0.307944297791*xe6 -
     +  0.936020970345*xe7 +
     +  0.024969343096*xe8 -
     +  0.517931699753*xe9 -
     +  0.308994054794*xe10 -
     +  0.290423154831*xe11 -
     +  0.099293000996*xe12 +
     +  0.164729803801*xe13 +
     +  0.054267201573*xe14
      xf2 = 1.572309255600*xe0 +
     +  1.381547451019*xe1 -
     +  1.284856081009*xe2 -
     +  3.600407361984*xe3 -
     +  1.170001864433*xe4 +
     +  1.530593752861*xe5 -
     +  1.739808201790*xe6 -
     +  0.700896143913*xe7 -
     +  0.818501532078*xe8 -
     +  7.580852508545*xe9 -
     +  1.684179663658*xe10 +
     +  1.502451419830*xe11 +
     +  0.760096788406*xe12 -
     +  0.949119210243*xe13 -
     +  1.555212616920*xe14
      dyieldDeqps(k,1) = xf0 * 977.555715042962/1.0    
      dyieldDeqps(k,2) = xf1 * 977.555715042962/(depsp*10.819778284410)
      dyieldDtemp(k) = xf2 * 977.555715042962/480.0  
C Compute the yield stress
C        Yield(k) = yieldStress(epsp, depsp, temp)
C Compute derivative of yield / epsp
C        dyieldDeqps(k,1) = yieldHardEpsp(epsp, depsp, temp)
C Compute derivative of yield / depsp
C        dyieldDeqps(k,2) = yieldHardDepsp(epsp, depsp, temp)
C Compute derivative of yield / temp
C        dyieldDtemp(k) = yieldHardTemp(epsp, depsp, temp)
      end do
C
      return
      end
